# Release procedure:
# 1. On the master branch, update the changelog and stage it in git.
# 2. Run `yarn version --[major|minor|patch]`. (This tags the commit.)
# 3. Push both the commit and tags to GitHub (`git push --tags Automattic` and
#    `git push Automattic HEAD:master`, where "Automattic" is the remote name
#    for git@github.com:Automattic/node-canvas.git).
# 4. Create a draft release manually using the GitHub UI for the new tag.
# 5. Switch to the prebuilds branch.
# 6. Set the `jobs.*.strategy.matrix.node` arrays to the set of Node.js versions
#    to build for.
# 7. Set the `jobs.*.strategy.matrix.canvas_tag` arrays to the set of Canvas
#    tags to build. (Usually this is a single tag, but can be an array when a
#    new version of Node.js is released and older versions of Canvas need to be
#    built.)
# 8. Commit this file and push.
# 9. In the Actions tab, navigate to the "Make Prebuilds" workflow and click
#    "Run workflow". Select the `prebuilds` branch so that that branch's
#    prebuild.yaml file is used.
# 10.Once the builds succeed, promote the draft release to a full release and
#    run npm publish.

# Note that the files in the prebuild/ directory will be used from the commit
# that was used to trigger the prebuild workflow. They will not be from the
# commit/tag that you are building. Because of differences in the provided
# versions of git, this is achieved in a different way on Linux than on Mac and
# Win.
#
# Pay particular attention to changes to binding.gyp on master. That file is not
# used! The ones in prebuild/**/ are.

# Tip: If uploads are inexplicably failing, open the release in GitHub, click
# "edit" and delete any assets that are in purgatory (have a /!\ next to them).

name: Make Prebuilds
on:
  workflow_dispatch:
    inputs:
      buildVersion:
        description: 'Version to build'
        required: true
        default: 'v3.0.0-rc2'
      # UPLOAD_TO can be specified to upload the release assets under a different tag
      # name (e.g. for testing). If omitted, the assets are published under the same
      # release tag as the canvas version being built.
      uploadTo:
        description: 'Upload artefacts to version'
        required: false
        default: ''

env:
  CANVAS_VERSION_TO_BUILD: ${{inputs.buildVersion}}
  UPLOAD_TO: ${{inputs.uploadTo}}

jobs:
  Debian:
    strategy:
      fail-fast: false
      matrix:
        node: [ 18, 20, 22 ]
    runs-on: ubuntu-latest
    # container:
    #   image: node:${{ matrix.node }}-slim
    name: Node.js ${{ matrix.node }}, Debian
    steps:
      - name: Checkout Prebuild
        uses: actions/checkout@v4
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CANVAS_VERSION_TO_BUILD }}
          path: source
      - name: Install Dependencies
        run: |
          npm install
          . ./Debian/preinstall.sh
        working-directory: ./prebuild
      - name: Build
        run: npm install --build-from-source
        working-directory: ./source
      - name: Test
        run: npm test
        working-directory: ./source
      - name: Bundle
        run: . ./prebuild/Debian/bundle.sh
      - name: Uninstall Dependencies
        run: . ./prebuild/Debian/uninstall.sh
      - name: Test binary
        run: npm test
        working-directory: ./source
      - name: Make asset
        id: make_asset
        run: . ./prebuild/tarball.sh
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.UPLOAD_TO || env.CANVAS_VERSION_TO_BUILD }}
          allowUpdates: true
          artifacts: ${{ steps.make_asset.outputs.asset_name }}
          artifactContentType: application/tar+gz

  Alpine:
    strategy:
      fail-fast: false
      matrix:
        # FIXME: no 22 image yet
        node: [ 18, 20 ]
        canvas_tag: [ "v3.0.0-rc1" ] # e.g. "v2.6.1"
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node }}-alpine
    name: Node.js ${{ matrix.node }}, Alpine
    steps:
      - name: Checkout Prebuild
        uses: actions/checkout@v4
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CANVAS_VERSION_TO_BUILD }}
          path: source
      - name: Install Dependencies
        run: |
          npm install
          . ./Alpine/preinstall.sh
        working-directory: ./prebuild
      - name: Build
        run: npm install --build-from-source
        working-directory: ./source
      - name: Test
        # some tests failed
        continue-on-error: true
        run: npm test
        working-directory: ./source
      - name: Bundle
        run: . ./prebuild/Debian/bundle.sh
      - name: Uninstall Dependencies
        run: . ./prebuild/Alpine/uninstall.sh
      - name: Test binary
        # some tests failed
        continue-on-error: true
        run: npm test
        working-directory: ./source
      - name: Make asset
        id: make_asset
        run: . ./prebuild/tarball.sh
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.UPLOAD_TO || env.CANVAS_VERSION_TO_BUILD }}
          allowUpdates: true
          artifacts: ${{ steps.make_asset.outputs.asset_name }}
          artifactContentType: application/tar+gz

  macOS:
    strategy:
      fail-fast: false
      matrix:
        node: [ 18, 20, 22 ]
        os:
          - runner: macos-latest
            arch: x64
    #     - runner: macos-latest-xlarge # GitHub's Apple Silicon runner
    #       arch: arm64
    runs-on: ${{ matrix.os.runner }}
    name: Node.js ${{ matrix.node }}, macOS ${{ matrix.os.arch }}
    steps:
      - name: Checkout Prebuild
        uses: actions/checkout@v4
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CANVAS_VERSION_TO_BUILD }}
          path: source
      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: |
          npm install
          . ./macOS/preinstall.sh
        working-directory: ./prebuild
      - name: Build
        run: npm install --build-from-source
        working-directory: ./source
      - name: Test
        run: npm test
        working-directory: ./source
      - name: Bundle
        run: |
          . ./prebuild/macOS/prebundle.sh
          . ./prebuild/macOS/bundle.sh
      - name: Uninstall Dependencies
        run: . ./prebuild/macOS/uninstall.sh
      - name: Test binary
        run: npm test
        working-directory: ./source
      - name: Make bundle
        id: make_bundle
        run: . prebuild/tarball.sh
      - name: Make asset
        id: make_asset
        run: . ./prebuild/tarball.sh
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.UPLOAD_TO || env.CANVAS_VERSION_TO_BUILD }}
          allowUpdates: true
          artifacts: ${{ steps.make_asset.outputs.asset_name }}
          artifactContentType: application/tar+gz

  Windows:
    strategy:
      fail-fast: false
      matrix:
        node: [ 18, 20, 22 ]
    name: Node.js ${{ matrix.node }}, Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Prebuild
        uses: actions/checkout@v4
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CANVAS_VERSION_TO_BUILD }}
          path: source
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          path-type: inherit
      - name: Install Dependencies
        shell: msys2 {0}
        run: |
          npm install
          . ./Windows/preinstall.sh
        working-directory: ./prebuild
      - name: Build
        shell: msys2 {0}
        run: npm install --build-from-source
        working-directory: ./source
      - name: Test
        shell: msys2 {0}
        working-directory: ./source
        run: npm test
      - name: Bundle
        shell: msys2 {0}
        run: . ./prebuild/Windows/bundle.sh
      - name: Test binary
        # By not running in msys2, this doesn't have access to the msys2 libs
        run: npm test
        # broke on Node 22, may be cause by https://github.com/actions/setup-node/issues/1016
        continue-on-error: true
        working-directory: ./source
      - name: Make asset
        id: make_asset
        shell: msys2 {0}
        # I can't figure out why this isn't an env var already. It shows up with `env`.
        run: . ./prebuild/tarball.sh
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.UPLOAD_TO || env.CANVAS_VERSION_TO_BUILD }}
          allowUpdates: true
          artifacts: ${{ steps.make_asset.outputs.asset_name }}
          artifactContentType: application/tar+gz
