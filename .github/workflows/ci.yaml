name: Test

on: [ push ]

jobs:
  Debian:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 18, 20, 22 ]
    # container:
    #   image: node:${{ matrix.node }}-slim
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev librsvg2-dev libpixman-1-dev
      - name: Build
        run: npm install --build-from-source
      - name: Test
        run: npm test

  Alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # FIXME: there is no 22 node image yet
        node: [ 18, 20 ]
    container:
      image: node:${{ matrix.node }}-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: apk --no-cache add build-base cairo-dev jpeg-dev pango-dev giflib-dev librsvg-dev pixman-dev
      - name: Build
        run: npm install --build-from-source
      - name: Test
        # some tests failed
        continue-on-error: true
        run: npm test

  macOS:
    strategy:
      matrix:
        node: [ 18, 20, 22 ]
        os:
          - runner: macos-latest
            arch: x64
    #     - runner: macos-latest-xlarge
    #       arch: arm64
    runs-on: ${{ matrix.os.runner }}
    steps:
      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: brew install pkg-config cairo pango libpng giflib librsvg pixman
      - name: Build
        run: npm install --build-from-source
      - name: Test
        run: npm test

  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node: [ 18, 20, 22 ]
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          path-type: inherit
      - name: Install Dependencies
        shell: msys2 {0}
        run: |
          prefix=${MSYSTEM,,}
          arch=${MSYSTEM_CARCH}
          
          pacman --noconfirm --needed -S \
            ${prefix}/mingw-w64-ucrt-${arch}-binutils \
            ${prefix}/mingw-w64-ucrt-${arch}-tools \
            ${prefix}/mingw-w64-ucrt-${arch}-libjpeg-turbo \
            ${prefix}/mingw-w64-ucrt-${arch}-pango \
            ${prefix}/mingw-w64-ucrt-${arch}-cairo \
            ${prefix}/mingw-w64-ucrt-${arch}-giflib \
            ${prefix}/mingw-w64-ucrt-${arch}-harfbuzz \
            ${prefix}/mingw-w64-ucrt-${arch}-freetype \
            ${prefix}/mingw-w64-ucrt-${arch}-fontconfig \
            ${prefix}/mingw-w64-ucrt-${arch}-librsvg \
            ${prefix}/mingw-w64-ucrt-${arch}-libxml2
          
          libs="cairo-2 png16-16 jpeg-8 pango-1.0-0 pangocairo-1.0-0 gobject-2.0-0 glib-2.0-0 turbojpeg gif-7 freetype-6 rsvg-2-2"
          for lib in $libs; do
            gendef /${prefix}/bin/lib$lib.dll > /dev/null 2>&1 || {
              echo "could not find lib$lib.dll, have to skip ";
              continue;
            }
            dlltool -d lib$lib.def -l /${prefix}/lib/lib$lib.lib > /dev/null 2>&1 || {
              echo "could not create dll for lib$lib.dll";
              continue;
            }
            echo "created lib$lib.lib from lib$lib.dll";
            rm lib$lib.def
          done
      - name: Build
        shell: msys2 {0}
        run: npm install --build-from-source
      - name: Test
        shell: msys2 {0}
        run: npm test

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 20 ]
    container:
      image: node:${{ matrix.node }}-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --ignore-scripts
      - name: Lint
        run: npm run lint
      - name: Lint Types
        run: npm run tsd
